#!/bin/bash

WIDTH=25
HEIGHT=25

# initialize game of life
function init_game() {
    for i in $(seq 0 $(( $WIDTH*$HEIGHT-1 ))); do
        game[$i]=$(( $RANDOM %2 ))
        # game[$i]=0
    done

    # glider
    # game[0]=0
    # game[1]=0
    # game[2]=0
    # game[3]=0
    # game[4]=0
    # game[25]=0
    # game[26]=0
    # game[27]=1
    # game[28]=0
    # game[29]=0
    # game[50]=0
    # game[51]=0
    # game[52]=0
    # game[53]=1
    # game[54]=0
    # game[75]=0
    # game[76]=1
    # game[77]=1
    # game[78]=1
    # game[79]=0
    # game[100]=0
    # game[101]=0
    # game[102]=0
    # game[103]=0
    # game[104]=0
}

# $game is the global variable containing the game state
function print_game() {
    clear
    for i in $(seq 0 $(( $HEIGHT-1 ))); do
        for j in $(seq 0 $(( $WIDTH-1 ))); do
            index=$(( $i*$HEIGHT+$j ))
            if [[ ${game[$index]} -eq 0 ]]; then
                echo -n "  "
            else
                echo -n "* "
            fi
        done
        echo
    done
}

function iterate() {
    for i in $(seq 0 $(( $HEIGHT-1 ))); do
        for j in $(seq 0 $(( $WIDTH-1 ))); do
            num_live=$( live_neighbours $i $j )
            index=$(( $i*$HEIGHT+$j ))
            # if the current cell is dead
            if [[ ${game[$index]} -eq 0 ]]; then
                if [[ $num_live -eq 3 ]]; then
                    game[$index]=2
                fi
            else # if alive
                if [[ $num_live -ne 2 ]] && [[ $num_live -ne 3 ]]; then
                    game[$index]=3
                fi
            fi
        done
    done

    for i in $(seq 0 $(( $HEIGHT-1 ))); do
        for j in $(seq 0 $(( $WIDTH-1 ))); do
            index=$(( $i*$HEIGHT+$j ))
            if [[ ${game[$index]} -eq 2 ]]; then
                game[$index]=1
            fi
            if [[ ${game[$index]} -eq 3 ]]; then
                game[$index]=0
            fi
        done
    done
}


# takes in $i $j
# 2 = dead cell becoming alive in the next iteration
# 3 = live cell becoming dead in the next iteration
# we want to count 1s and 3s
function live_neighbours() {
    i=$1
    j=$2
    num_live=0
    for in in $(seq -1 1); do
        for jn in $(seq -1 1); do
            # index in range
            if [ $(( $i+$in )) -lt 0 ]; then
                continue
            fi
            # index in range
            if [ $(( $j+$jn )) -lt 0 ]; then
                continue
            fi
            # not current cell
            if [ $in -eq 0 ] && [ $jn -eq 0 ]; then
                continue
            fi
            index=$(( ($i+$in)*$HEIGHT + ($j+$jn) ))
            if [[ ${game[$(( $index ))]} -eq "1" ]] || [[ "${game[$(( $index ))]}" -eq "3" ]]; then
                num_live=$(( $num_live + 1 ))
            fi
        done
    done
    echo $num_live
}

init_game
print_game
while read -n 1 x; do
    iterate
    print_game
done
# echo "0, 0: $(live_neighbours 0 0)"
